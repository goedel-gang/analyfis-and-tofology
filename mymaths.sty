\ProvidesPackage{mymaths}

\RequirePackage{mathtools}
\RequirePackage{amssymb}
\RequirePackage{stmaryrd}

\newcommand*\Z{\mathbb Z}
\newcommand*\R{\mathbb R}
\renewcommand*\C{\mathbb C}
\newcommand*\N{\mathbb N}
\newcommand*\Q{\mathbb Q}
\renewcommand*\P{\mathbb P}
\newcommand*\seq[1]{(#1 _n)_{n = 1}^\infty}

\RequirePackage{bm}

\renewcommand*\vec[1]{\bm{\mathrm #1}}
\newcommand*\mat[1]{\bm{\mathrm #1}}
\newcommand*\defeq\coloneqq
\newcommand*\restrict|
\newcommand*\divides\mid
\newcommand*\ndivides\nmid
\newcommand*\compose\circ
\newcommand*\union\cup
\newcommand*\Union\bigcup
\newcommand*\intersect\cap
\newcommand*\Intersect\bigcap
\newcommand*\pcon\sim
\newcommand*\equivr\sim

\newcommand*\tran[1]{{#1}^{\mathsf T}}
\newcommand*\herm[1]{{#1}^{\dagger}}
\newcommand*\conj\overline

\newcommand*\Id{\mathrm{Id}}

\newcommand*\powerset{\mathcal P}

% this is the hill I'm prepared to die on
\let\uglyepsilon\epsilon
\let\epsilon\varepsilon
\let\uglyphi\phi
\let\phi\varphi
\let\stupidset\subset
\let\subset\subseteq
\let\lankyset\emptyset
\let\emptyset\varnothing

\DeclarePairedDelimiter\abs\lvert\rvert
\DeclarePairedDelimiter\card\lvert\rvert
\DeclarePairedDelimiter\norm\lVert\rVert
\DeclarePairedDelimiter\set\{\}
\DeclarePairedDelimiter\parens()
\DeclarePairedDelimiter\bracks[]
\DeclarePairedDelimiter\intoo()
\DeclarePairedDelimiter\intco[)
\DeclarePairedDelimiter\intoc(]
\DeclarePairedDelimiter\intcc[]
\DeclarePairedDelimiter\cycsgp\langle\rangle

\DeclareMathOperator\Forall{\forall}
\DeclareMathOperator\Exists{\exists}

\DeclareMathOperator\cl{cl}

% work-around for proof from
% https://tex.stackexchange.com/questions/305174/proof-environment-produces-proof-proof-only-when-thmbox-is-used
\RequirePackage{amsthm}

% letltxmacro is like a cleverer version of let, that works with robust
% commands or something
% https://tex.stackexchange.com/questions/88001/when-to-use-letltxmacro
\RequirePackage{letltxmacro}

\LetLtxMacro\amsproof\proof
\LetLtxMacro\amsendproof\endproof

\RequirePackage{thmtools}

\AtBeginDocument{%
  \LetLtxMacro\proof\amsproof
  \LetLtxMacro\endproof\amsendproof
}

\declaretheorem{theorem}
\declaretheorem[sibling=theorem]{lemma}
\declaretheorem[sibling=theorem]{corollary}

\declaretheorem
 [name=Helpful unsolicited remark,numbered=no]
 {remark}

\declaretheorem
 [name=``Open'' question,numbered=no]
 {question}
